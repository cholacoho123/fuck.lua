--============= MAILING DIAMONDS ============================
for i = 1,10 do print() end

if not LPH_OBFUSCATED then
    getgenv().Settings = {
        Mailing = {
            ["Diamonds"] = {
                Class = "Currency",
                Amount = "All",        -- g·ª≠i to√†n b·ªô khi ƒë·∫°t ng∆∞·ª°ng
                MinDiamonds = 20000000  -- ng∆∞·ª°ng t·ªëi thi·ªÉu (v√≠ d·ª•: 1 tri·ªáu)
            },
        },
        Users = {
            "OKkMma_b",  -- ng∆∞·ªùi nh·∫≠n
        },
        ["Split Items Evenly"] = false,
        ["Only Online Accounts"] = false,
        ["Developer Mode"] = false,
        [[ Thank you for using System Exodus <3! ]]
    }
end

if not game:IsLoaded() then game.Loaded:Wait() end

local M_Players = game:GetService("Players")
local M_ReplicatedStorage = game:GetService("ReplicatedStorage")
local M_HttpService = game:GetService("HttpService")
local M_LocalPlayer = M_Players.LocalPlayer

local M_Library = {}
local M_Client = {}
for _,v in next, M_ReplicatedStorage.Library.Client:GetChildren() do
    if v:IsA("ModuleScript") and not v:GetAttribute("NOLOAD") then
        local ok, mod = pcall(function() return require(v) end)
        if ok then M_Library[v.Name] = mod M_Client[v.Name] = mod end
    end
end
for _,v in next, M_ReplicatedStorage.Library:GetChildren() do
    if v:IsA("ModuleScript") and not v:GetAttribute("NOLOAD") then
        local ok, mod = pcall(function() return require(v) end)
        if ok then M_Library[v.Name] = mod end
    end
end

local M_NormalLibrary = M_ReplicatedStorage.Library
local M_PlayerSave = require(M_NormalLibrary.Client.Save)

local function M_GetDiamonds(ReturnUID)
    for i,v in next, M_PlayerSave.Get()["Inventory"].Currency do
        if v.id == "Diamonds" then
            return ReturnUID and i or v._am
        end
    end
    return 0
end

local function M_GenerateDescription()
    local AdjectiveList = {
        "Bold","Quick","Happy","Tiny","Brave","Clever","Gentle",
        "Mighty","Calm","Loyal","Bright","Wise","Fearless","Vivid"
    }
    local NounList = {
        "Lion","Castle","Book","Cloud","Tiger","Forest","River",
        "Sword","Galaxy","Phoenix","Knight","Star","Dragon"
    }
    local adj = AdjectiveList[math.random(#AdjectiveList)]
    local noun = NounList[math.random(#NounList)]
    return adj .. " " .. noun
end

local function M_SendMail(Username, Class, UID, Amount)
    local success, result = pcall(function()
        return M_Library.Network.Invoke("Mailbox: Send", Username, M_GenerateDescription(), Class, UID, Amount)
    end)
    if result then
        print(string.format("[Mailing] üíå Sent %s %s to %s", tostring(Amount), Class, Username))
        Settings.MailCost = 0
        Settings.DiamondsAvailable = math.floor(M_GetDiamonds() - Settings.MailCost)
    else
        warn("[Mailing] ‚ùå Send failed, retrying in 3s...")
        task.wait(3)
        return M_SendMail(Username, Class, UID, Amount)
    end
    return result
end

-- üí† G·ª¨I GEMS KHI ƒê·∫†T NG∆Ø·ª†NG
task.spawn(function()
    print("[Mailing] üöÄ B·∫Øt ƒë·∫ßu module g·ª≠i kim c∆∞∆°ng t·ª± ƒë·ªông‚Ä¶")

    while task.wait(10) do
        local DiamondsNow = M_GetDiamonds()
        local MinDiamonds = (Settings.Mailing.Diamonds.MinDiamonds or 0)
        local UID = M_GetDiamonds(true)

        if DiamondsNow >= MinDiamonds then
            local MailCost = Settings.MailCost or 0
            local Sendable = math.max(0, DiamondsNow - MailCost)

            if Sendable > 0 then
                print(string.format("[Mailing] üí† ƒê·∫°t ng∆∞·ª°ng (%s ‚â• %s) ‚Äî g·ª≠i %s gems tr·ª´ ph√≠ %s",
                    DiamondsNow, MinDiamonds, Sendable, MailCost))

                for _, Username in next, Settings.Users do
                    local ok = M_SendMail(Username, "Currency", UID, Sendable)
                    if ok then
                        print(string.format("[Mailing] ‚úÖ G·ª≠i th√†nh c√¥ng %s gems cho %s", Sendable, Username))
                    else
                        warn("[Mailing] ‚ö†Ô∏è G·ª≠i th·∫•t b·∫°i ‚Äî th·ª≠ l·∫°i sau")
                    end
                end
            else
                print(string.format("[Mailing] üîπ C√≥ %s gems nh∆∞ng kh√¥ng ƒë·ªß sau khi tr·ª´ ph√≠.", DiamondsNow))
            end
        else
            print(string.format("[Mailing] üí§ Ch∆∞a ƒë·∫°t ng∆∞·ª°ng t·ªëi thi·ªÉu (%s/%s)", DiamondsNow, MinDiamonds))
        end
    end
end)
